# Generated by Django 4.2.24 on 2025-10-01 22:02

from django.db import migrations, models
import django.db.models.deletion
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Badge name (e.g., 'New', 'Featured', 'Best Seller')", max_length=50, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of the name', unique=True)),
                ('badge_type', models.CharField(choices=[('status', 'Status'), ('quality', 'Quality'), ('popularity', 'Popularity'), ('achievement', 'Achievement'), ('special', 'Special Offer'), ('custom', 'Custom')], default='custom', help_text='Type/purpose of this badge', max_length=20)),
                ('description', models.TextField(blank=True, help_text='What this badge represents')),
                ('style', models.CharField(choices=[('default', 'Default'), ('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Success'), ('warning', 'Warning'), ('danger', 'Danger'), ('info', 'Info')], default='default', help_text='Visual style preset', max_length=20)),
                ('icon', models.CharField(blank=True, help_text="Icon class or emoji (e.g., 'fa-star', '‚≠ê')", max_length=100)),
                ('background_color', models.CharField(blank=True, help_text="Background color hex code (e.g., '#10B981')", max_length=7)),
                ('text_color', models.CharField(blank=True, help_text="Text color hex code (e.g., '#FFFFFF')", max_length=7)),
                ('display_order', models.IntegerField(default=0, help_text='Priority order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Allow this badge to be used')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Auto-hide this badge after this date (optional)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Tag name (e.g., 'AI', 'Machine Learning', 'Python')", max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of the name', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Optional description of this tag')),
                ('color', models.CharField(blank=True, help_text="Hex color code for tag display (e.g., '#3B82F6')", max_length=7)),
                ('use_count', models.IntegerField(default=0, editable=False, help_text='Number of times this tag has been used')),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this tag (e.g., show in tag cloud)')),
                ('is_active', models.BooleanField(default=True, help_text='Allow this tag to be used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['-use_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Category name (e.g., 'Electronics', 'Software', 'Tutorial')", max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of the name', max_length=100, unique=True)),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='Category description')),
                ('icon', models.CharField(blank=True, help_text="Icon class or emoji (e.g., 'fa-laptop', 'üíª')", max_length=100)),
                ('color', models.CharField(blank=True, help_text="Hex color code (e.g., '#FF5733')", max_length=7)),
                ('display_order', models.IntegerField(default=0, help_text='Lower numbers appear first')),
                ('is_active', models.BooleanField(default=True, help_text='Show this category on the website')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ForeignKey(blank=True, help_text='Category image/thumbnail', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
                ('parent', models.ForeignKey(blank=True, help_text='Parent category (leave blank for top-level)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='taxonomy.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['display_order', 'name'],
            },
        ),
    ]
